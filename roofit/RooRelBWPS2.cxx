/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooRelBWPS2.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooRelBWPS2) 

 RooRelBWPS2::RooRelBWPS2(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _pt,
                        RooAbsReal& _mass,
                        RooAbsReal& _width) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   pt("pt","pt",this,_pt),
   mass("mass","mass",this,_mass),
   width("width","width",this,_width)
 { 
 } 


 RooRelBWPS2::RooRelBWPS2(const RooRelBWPS2& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   pt("pt",this,other.pt),
   mass("mass",this,other.mass),
   width("width",this,other.width)
 { 
 } 



 Double_t RooRelBWPS2::evaluate() const 
 { 
   // 
   const Double_t mkaon = 0.4937; //GeV
   const Double_t mpion = 0.1396; //GeV
   Double_t mass2 = (mass*mass);
   Double_t diffnum = (x*x)-((mpion+mkaon)*(mpion+mkaon));
   Double_t diffden = mass2-((mpion+mkaon)*(mpion+mkaon));   
   Double_t overm = 1./x;
   Double_t ratio = diffnum/diffden;
   Double_t gamma = (width*mass*overm)*(TMath::Power(ratio, 1.5));

   Double_t arg = (x*x)-mass2;
   Double_t arg2 = (arg*arg);
   Double_t mw = gamma*mass;
   Double_t breitw = (x*mw)/(arg2+(mw*mw));
   Double_t rad = TMath::Sqrt((x*x)+(pt*pt));
   Double_t exp = TMath::Exp(-rad/0.253); //T_fo=160 MeV PbPb
   return x*exp*breitw/rad;
 } 



